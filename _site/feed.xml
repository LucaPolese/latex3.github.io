<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The LaTeX Project</title>
    <description></description>
    <link>https://latex-project.org//</link>
    <atom:link href="https://latex-project.org//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 03 Dec 2021 17:50:49 +0100</pubDate>
    <lastBuildDate>Fri, 03 Dec 2021 17:50:49 +0100</lastBuildDate>
    <generator>Jekyll v4.1.1</generator>
    
      <item>
        <title>Fall 2021 LaTeX release available</title>
        <description>&lt;h1 id=&quot;the-fall-2021-latex-release-is-available&quot;&gt;The Fall 2021 LaTeX release is available&lt;/h1&gt;

&lt;p&gt;As we have announced previously, we have shifted the release dates for
LaTeX slightly, to better align with the yearly release of TeX Live:
a first release in
May/June after TeX Live has updated and a second release around November.&lt;/p&gt;

&lt;p&gt;The current release does not contain any major new modules, but is focused around consolidation  and improvements of functionality introduced in previous releases.
In the meantime we are working further on the future production of reliable tagged PDF output (see
the article &lt;a href=&quot;/publications/2020-FMi-TUB-tb129mitt-tagpdf.pdf&quot; target=&quot;_blank&quot; onclick=&quot;vgwPixelCall('be7595c59bf34ca8b4366dfa05816e17');&quot;&gt;LaTeX
Tagged PDF — A blueprint for a large project&lt;/a&gt; that describes the
project we are engaged in), which will again take center stage in the Spring release 2022.&lt;/p&gt;

&lt;h3 id=&quot;hook-management-improvements&quot;&gt;Hook management improvements&lt;/h3&gt;

&lt;p&gt;There have been some improvements of the hook management as a result of feedback from developers and our own experience applying the new functionality. This includes one breaking change in behavior (relevant only to package developers), for which we offer compatibility code for now. Thus nothing will break right now, but going forward the new method needs to be used, because at some point in the future the compatibility code will be taken out.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Standardizing generic hook names;&lt;/li&gt;
  &lt;li&gt;Rationalizing the behavior of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\RemoveFromHook&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;Providing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\ActivateGenericHook&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;Providing a command to clear “next” hook code before invocation;&lt;/li&gt;
  &lt;li&gt;Properly clean up after a one-time hook.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;new-or-improved-commands&quot;&gt;New or improved commands&lt;/h3&gt;

&lt;p&gt;There are many enhancements and corrections that we
documented in the ltnews article for this release (and a few very
minor ones that only made it into the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;changes.txt&lt;/code&gt; file). The most
important aspects from a user perspective are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Extending &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\ShowCommand&lt;/code&gt; to show commands defined with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\NewDocumentCommand&lt;/code&gt; and friends;&lt;/li&gt;
  &lt;li&gt;Extending &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\NewCommandCopy&lt;/code&gt; as well, to safely copy such commands to new names;&lt;/li&gt;
  &lt;li&gt;Improving the math font family allocation to avoid running out of available math groups in complex documents. A number of math alphabets (controlled through the counter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localmathalphabets&lt;/code&gt;) are now locally allocated and their math groups can be reused with different alphabets per formula;&lt;/li&gt;
  &lt;li&gt;Adding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\PackageNote&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\PackageNoteOnLine&lt;/code&gt; to show notes that aren’t “warnings” on the terminal;&lt;/li&gt;
  &lt;li&gt;Supporting an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alt&lt;/code&gt; key with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\includegraphics&lt;/code&gt; (anticipating future development);&lt;/li&gt;
  &lt;li&gt;Providing a new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\newcolumn&lt;/code&gt; command and an optional argument to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\columnbreak&lt;/code&gt; for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;multicol&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;Altering the default for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\tracinglostchars&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But read the whole ltnews article because there may be other gems that
are useful for you.&lt;/p&gt;

&lt;h4 id=&quot;where-to-learn-more-&quot;&gt;Where to learn more …&lt;/h4&gt;

&lt;p&gt;The new features and most of the important bug fixes made in this release
are documented in &lt;a href=&quot;/news/latex2e-news/ltnews34.pdf&quot; target=&quot;_blank&quot; onclick=&quot;vgwPixelCall('349962df3c4b42a7a64e729501dc2d7e');&quot;&gt;“LaTeX2e
News Issue 34”&lt;/a&gt;. This document can be found on the &lt;a href=&quot;/news/latex2e-news/&quot;&gt;LaTeX2e news
page&lt;/a&gt; where you will also find
release information for earlier LaTeX releases.&lt;/p&gt;

&lt;p&gt;Happy LaTeXing
— Frank&lt;/p&gt;

</description>
        <pubDate>Mon, 15 Nov 2021 01:00:00 +0100</pubDate>
        <link>https://latex-project.org//news/2021/11/15/issue34-of-latex2e-released/</link>
        <guid isPermaLink="true">https://latex-project.org//news/2021/11/15/issue34-of-latex2e-released/</guid>
        
        <category>latex2e</category>
        
        <category>latex-news</category>
        
        <category>tagged PDF</category>
        
        
        <category>news</category>
        
      </item>
    
      <item>
        <title>Final pre-release of LaTeX 2021-11-15 is available for testing</title>
        <description>&lt;h1 id=&quot;the-final-latex-pre-release-for-2021-11-15-is-available-for-testing&quot;&gt;The final LaTeX pre-release for 2021-11-15 is available for testing&lt;/h1&gt;

&lt;p&gt;A few days ago we submitted the final pre-release of the LaTeX format to CTAN and by now it should be available to all users using MiKTeX or TeX Live (on any operating system).&lt;/p&gt;

&lt;h2 id=&quot;main-features-included-in-the-final-pre-release-for-2021-11-15&quot;&gt;Main features included in the final pre-release for 2021-11-15&lt;/h2&gt;

&lt;p&gt;The upcoming release does not contain any major new modules, but is focused around consolidation  and improvements of functionality introduced in previous releases. There have been some improvements of the hook management as a result of feedback from developers and our own experience applying the new functionality. This includes one breaking change in behavior (relevant only to package developers), for which we offer compatibility code for now. Thus nothing will break right now, but going forward the new method needs to be used, because at some point in the future the compatibility code will be taken out.&lt;/p&gt;

&lt;p&gt;The hook management improvements are&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Standardizing generic hook names;&lt;/li&gt;
  &lt;li&gt;Rationalizing the behavior of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\RemoveFromHook&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;Providing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\ActivateGenericHook&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;Providing a command to clear “next” hook code before invocation;&lt;/li&gt;
  &lt;li&gt;Properly clean up after a one-time hook.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Other notable improvements include&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Extending &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\ShowCommand&lt;/code&gt; to show commands defined with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\NewDocumentCommand&lt;/code&gt; and friends;&lt;/li&gt;
  &lt;li&gt;Extending &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\NewCommandCopy&lt;/code&gt; as well, to safely copy such commands to new names;&lt;/li&gt;
  &lt;li&gt;Improving the math font family allocation to avoid running out of available math groups in complex documents. A number of math alphabets (controlled through the counter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localmathalphabets&lt;/code&gt;) are now locally allocated and their math groups can be reused with different alphabets per formula;&lt;/li&gt;
  &lt;li&gt;Adding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\PackageNote&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\PackageNoteOnLine&lt;/code&gt; to show notes that aren’t “warnings” on the terminal;&lt;/li&gt;
  &lt;li&gt;Supporting an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alt&lt;/code&gt; key with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\includegraphics&lt;/code&gt; (anticipating future development);&lt;/li&gt;
  &lt;li&gt;Providing a new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\newcolumn&lt;/code&gt; command and an optional argument to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\columnbreak&lt;/code&gt; for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;multicol&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;Altering the default for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\tracinglostchars&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are also a number of smaller enhancements and some bug fixes as usual. The details are discussed in the draft publication of &lt;a href=&quot;/news/latex2e-news/ltnews34.pdf&quot; target=&quot;_blank&quot; onclick=&quot;vgwPixelCall('349962df3c4b42a7a64e729501dc2d7e');&quot;&gt;“LaTeX2e
News Issue 34”&lt;/a&gt;. A full list is given in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;changes.txt&lt;/code&gt; files that are part of the distribution.&lt;/p&gt;

&lt;h2 id=&quot;outlook&quot;&gt;Outlook&lt;/h2&gt;

&lt;p&gt;We expect to ship the final release (with the same code base as this pre-release) as planned around mid November.&lt;/p&gt;

&lt;h2 id=&quot;please-help-with-the-testing&quot;&gt;Please help with the testing&lt;/h2&gt;

&lt;p&gt;We are issuing this final pre-release now in the hope that you will help us by making sure that all the enhancements and fixes we have provided are safe and that they do not have any undesired side effects, so please help with the testing if you can.&lt;/p&gt;

&lt;p&gt;This development format allows you to test the upcoming LaTeX release scheduled for 2021-11-15 with your documents or packages. Such testing is particularly important for package maintainers to verify that changes to the core LaTeX haven’t introduced incompatibilities with existing code. We try to identify any such problems beforehand but such an undertaking is necessarily incomplete, which is why we are asking for user testing.&lt;/p&gt;

&lt;p&gt;Besides developers, we also ask ordinary users to try out the new release, because the more people that test the new format, the higher the chances that any hidden problems are identified before the final release hits the streets.&lt;/p&gt;

&lt;p&gt;Processing your documents with the pre-release is straightforward. All you have to do is to replace the invocation command by appending &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-dev&lt;/code&gt; to the executable, e.g., on the command line you would run&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pdflatex-dev myfile    or    lualatex-dev myfile    or    xelatex-dev myfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;instead of using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pdflatex&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lualatex&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xelatex&lt;/code&gt;. If you use an integrated editing environment, then it depends on the system  how to configure it to use an alternative format; but in any case the necessary modification should be straightforward.&lt;/p&gt;

&lt;p&gt;Enjoy — Frank&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ssl-vg03.met.vgwort.de/na/03770697eae2427c8a6bfe7e9b8ab332&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 25 Oct 2021 02:00:00 +0200</pubDate>
        <link>https://latex-project.org//news/2021/10/25/latex-dev-2021-4/</link>
        <guid isPermaLink="true">https://latex-project.org//news/2021/10/25/latex-dev-2021-4/</guid>
        
        <category>latex2e</category>
        
        <category>beta-testing</category>
        
        <category>development formats</category>
        
        
        <category>news</category>
        
      </item>
    
      <item>
        <title>Second pre-release of LaTeX 2021-11-15 is available for testing</title>
        <description>&lt;h1 id=&quot;the-second-latex-pre-release-for-2021-11-15-is-available-for-testing&quot;&gt;The second LaTeX pre-release for 2021-11-15 is available for testing&lt;/h1&gt;

&lt;p&gt;A few days ago we submitted a new LaTeX development format to CTAN and by now it should be available to all users using MiKTeX or TeX Live (on any operating system).&lt;/p&gt;

&lt;h2 id=&quot;main-features-of-the-second-pre-release-for-2021-11-15&quot;&gt;Main features of the second pre-release for 2021-11-15&lt;/h2&gt;

&lt;p&gt;The first pre-release was just a copy of the main release for 2021-06-01 in order to avoid that people using the development release regularly get an old format.&lt;/p&gt;

&lt;p&gt;The second pre-release now provides some improvements of the hook management as a result of feedback from developers and our own experience applying the new functionality. This includes one breaking change in behavior (relevant only to package developers), for which we offer compatibility code for now. Thus nothing will break right now, but going forward the new method needs to be used, because at some point in the future the compatibility code will be taken out.&lt;/p&gt;

&lt;p&gt;Notable improvements already contained in the pre-release are&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Resolving some issues around the new hook functionality:
    &lt;ul&gt;
      &lt;li&gt;Providing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\ActivateGenericHook&lt;/code&gt;;&lt;/li&gt;
      &lt;li&gt;Command to clear “next” hook code before invocation;&lt;/li&gt;
      &lt;li&gt;Cleanup after a one-time hook;&lt;/li&gt;
      &lt;li&gt;Changed the behavior of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\RemoveFromHook&lt;/code&gt;;&lt;/li&gt;
      &lt;li&gt;Standardizing generic hook names;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Other improvements:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\tracinglostchars&lt;/code&gt; got a new default&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\PackageNote&lt;/code&gt; was added to show notes that aren’t “warnings” on the terminal&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\ShowCommand&lt;/code&gt; got extended to show commands defined with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ltcmd&lt;/code&gt; (former &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xparse&lt;/code&gt;)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\NewCommandCopy&lt;/code&gt; got extended as well to safely these commands to new names&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alt&lt;/code&gt; key for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\includegraphics&lt;/code&gt; (anticipating future development)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are also a number of smaller enhancements and some bug fixes as usual. The more important ones are listed in the draft publication of &lt;a href=&quot;/news/latex2e-news/ltnews34.pdf&quot; target=&quot;_blank&quot; onclick=&quot;vgwPixelCall('349962df3c4b42a7a64e729501dc2d7e');&quot;&gt;“LaTeX2e
News Issue 34”&lt;/a&gt;. A full list is given in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;changes.txt&lt;/code&gt; files that are part of the distribution.&lt;/p&gt;

&lt;h3 id=&quot;improving-the-hook-management-further&quot;&gt;Improving the hook management further&lt;/h3&gt;

&lt;p&gt;The breaking change mentioned above involves the name of generic file hooks. They used a special naming convention in the past and we now changed them to use the same structure as all other generic hooks, that is, their “variable” part (i.e., the file or package name) is always in the second position. For example, to execute some code after the array package was loaded you now say&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\AddToHook{package/array/after}{...code...}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;just like you would set up code to be executed after each tabular environment with&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\AddToHook{env/tabular/after}{...code...}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;For now the old syntax &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package/after/array&lt;/code&gt; is still supported, thus packages making use of this functionality have time to adapt to the new convention once the main release is out and distributed.&lt;/p&gt;

&lt;p&gt;Other improvements to the hook management (e.g., the functionality to have packages implement generic hooks) are discussed in &lt;a href=&quot;/news/latex2e-news/ltnews34.pdf&quot;&gt;LaTeX2e News Issue 34&lt;/a&gt; and in the relevant kernel documentation.&lt;/p&gt;

&lt;h2 id=&quot;outlook&quot;&gt;Outlook&lt;/h2&gt;

&lt;p&gt;We expect to produce a third and  final pre-release adding some more features and enhancements in late October.&lt;/p&gt;

&lt;h2 id=&quot;please-help-with-the-testing&quot;&gt;Please help with the testing&lt;/h2&gt;

&lt;p&gt;We are issuing this second pre-release now in the hope that you will help us by making sure that all the enhancements and fixes we have provided are safe and that they do not have any undesired side effects, so please help with the testing if you can.&lt;/p&gt;

&lt;p&gt;This development format allows you to test the upcoming LaTeX release scheduled for 2021-11-15 with your documents or packages. Such testing is particularly important for package maintainers to verify that changes to the core LaTeX haven’t introduced incompatibilities with existing code. We try to identify any such problems beforehand but such an undertaking is necessarily incomplete, which is why we are asking for user testing.&lt;/p&gt;

&lt;p&gt;Besides developers, we also ask ordinary users to try out the new release, because the more people that test the new format, the higher the chances that any hidden problems are identified before the final release hits the streets.&lt;/p&gt;

&lt;p&gt;Processing your documents with the pre-release is straightforward. All you have to do is to replace the invocation command by appending &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-dev&lt;/code&gt; to the executable, e.g., on the command line you would run&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pdflatex-dev myfile    or    lualatex-dev myfile    or    xelatex-dev myfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;instead of using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pdflatex&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lualatex&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xelatex&lt;/code&gt;. If you use an integrated editing environment, then it depends on the system  how to configure it to use an alternative format; but in any case the necessary modification should be straightforward.&lt;/p&gt;

&lt;p&gt;Enjoy — Frank&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ssl-vg03.met.vgwort.de/na/03770697eae2427c8a6bfe7e9b8ab332&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 23 Sep 2021 02:00:00 +0200</pubDate>
        <link>https://latex-project.org//news/2021/09/23/latex-dev-2021-3/</link>
        <guid isPermaLink="true">https://latex-project.org//news/2021/09/23/latex-dev-2021-3/</guid>
        
        <category>latex2e</category>
        
        <category>beta-testing</category>
        
        <category>development formats</category>
        
        
        <category>news</category>
        
      </item>
    
      <item>
        <title>Spring 2021 LaTeX release available</title>
        <description>&lt;h1 id=&quot;the-spring-2021-latex-release-is-available&quot;&gt;The Spring 2021 LaTeX release is available&lt;/h1&gt;

&lt;p&gt;This year Spring in LaTeX’s counting is somewhat delayed, but this
fits the weather—at least here in Germany were we had April
weather throughout most of May.
We plan to keep it this way in future releases: a first release in
May/June and a second release around November as this better fits with
the release cycle of the TeXLive distribution.&lt;/p&gt;

&lt;p&gt;The focus of this release is to provide further important building
blocks for the future production of reliable tagged PDF output (see
the article &lt;a href=&quot;/publications/2020-FMi-TUB-tb129mitt-tagpdf.pdf&quot; target=&quot;_blank&quot; onclick=&quot;vgwPixelCall('be7595c59bf34ca8b4366dfa05816e17');&quot;&gt;LaTeX
Tagged PDF — A blueprint for a large project&lt;/a&gt; that describes the
project we are engaged in); these enhancements are discussed below.&lt;/p&gt;

&lt;h3 id=&quot;extending-the-hook-concept-to-paragraphs&quot;&gt;Extending the hook concept to paragraphs&lt;/h3&gt;

&lt;p&gt;Largely triggered by the need for better control of paragraph text
processing, in particular when producing tagged PDF output, we have
changed LaTeX so that the kernel gains control both at the start and
at the end of each paragraph. This is done in a manner that is (or
should be) transparent to both packages and documents.  We have also
included four public hooks to enable adding code to paragraphs in a
controlled manner. The documentation on this is available as 
&lt;a href=&quot;/help/documentation/#documentation-of-the-new-hook-management&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ltpara-doc.pdf&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;These hooks will enable us to automatically tag paragraphs and enables
us to identify when paragraphs are broken across columns or pages,
because those need special handling in tagged PDF.&lt;/p&gt;

&lt;h3 id=&quot;extending-the-hook-concept-to-commands&quot;&gt;Extending the hook concept to commands&lt;/h3&gt;

&lt;p&gt;With this release we extended the set of “generic” hooks to
commands: in theory each document-level command has now two hooks
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmd/&amp;lt;command&amp;gt;/before&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmd/&amp;lt;command&amp;gt;/after&lt;/code&gt; in which packages (or
the user in the preamble) can add code using the hook management
machinery.&lt;/p&gt;

&lt;p&gt;If you know the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;etoolbox&lt;/code&gt; package, then you can think of them as being
similar to the use of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\preto&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\appto&lt;/code&gt; from that package, but with
the difference that if different packages try to do that, the added
code chunks can be controlled and ordered as needed using the hook
mechanism. The documentation for this functionality can be found in
&lt;a href=&quot;/help/documentation/#documentation-of-the-new-hook-management&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ltcmdhook-doc.pdf&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In practice, not all commands can accept such generic hooks: some
(especially those that take optional arguments) will break if you try
using an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/after&lt;/code&gt; hook with them. However, many will and that allows
us in the future to easily patch the many commands to enable tagged PDF
without touching or updating package code.&lt;/p&gt;

&lt;h3 id=&quot;a-large-number-of-other-enhancements-and-corrections&quot;&gt;A large number of other enhancements and corrections&lt;/h3&gt;

&lt;p&gt;There are many other enhancements and corrections that we
documented in the ltnews article for this release (and a few very
minor ones that only made it into the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;changes.txt&lt;/code&gt; file). The most
important ones from a user perspective are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Further improvements of file name parsing; in particular
we made the parsing much faster again (it got a little slow with
the functional enhancements we introduced in the last releases)&lt;/li&gt;
  &lt;li&gt;Better handling of font series and font shape changes&lt;/li&gt;
  &lt;li&gt;Improved copy &amp;amp; paste from documents produced with pdfTeX&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But read the whole ltnews article because there may be other gems that
are useful for you.&lt;/p&gt;

&lt;h4 id=&quot;where-to-learn-more-&quot;&gt;Where to learn more …&lt;/h4&gt;

&lt;p&gt;The new features and most of the important bug fixes made in this release
are documented in &lt;a href=&quot;/news/latex2e-news/ltnews33.pdf&quot; target=&quot;_blank&quot; onclick=&quot;vgwPixelCall('3ee1eac0b37f4a6e9102440c46f29e30');&quot;&gt;“LaTeX2e
News Issue 33”&lt;/a&gt;. This document can be found on the &lt;a href=&quot;/news/latex2e-news/&quot;&gt;LaTeX2e news
page&lt;/a&gt; where you will also find
release information for earlier LaTeX releases.&lt;/p&gt;

&lt;p&gt;Happy LaTeXing
— Frank&lt;/p&gt;

</description>
        <pubDate>Tue, 01 Jun 2021 02:00:00 +0200</pubDate>
        <link>https://latex-project.org//news/2021/06/01/issue33-of-latex2e-released/</link>
        <guid isPermaLink="true">https://latex-project.org//news/2021/06/01/issue33-of-latex2e-released/</guid>
        
        <category>latex2e</category>
        
        <category>latex-news</category>
        
        <category>tagged PDF</category>
        
        
        <category>news</category>
        
      </item>
    
      <item>
        <title>Final pre-release of LaTeX 2021-06-01 is available for testing</title>
        <description>&lt;h1 id=&quot;the-third-and-final-latex-pre-release-for-2021-06-01-is-available-for-testing&quot;&gt;The third and final LaTeX pre-release for 2021-06-01 is available for testing&lt;/h1&gt;

&lt;p&gt;A few days ago we submitted a new LaTeX development format to CTAN
and by now this should be available to all users using MiKTeX or TeX
Live (on any operating system).&lt;/p&gt;

&lt;p&gt;Because of the freeze for TeXLive 2021 we have decided to move the
release date for LaTeX from May to June, to give everybody enough time
for testing the new release features.&lt;/p&gt;

&lt;h2 id=&quot;main-features-of-the-second-pre-release-for-2021-06-01&quot;&gt;Main features of the second pre-release for 2021-06-01&lt;/h2&gt;

&lt;p&gt;The final pre-release contains all the features, corrections and enhancements that we intend to release in June.
The more important ones are listed in
the &lt;a href=&quot;/news/latex2e-news/ltnews33.pdf&quot;&gt;draft publication of LaTeX2e News
Issue 33&lt;/a&gt;. A full list is given in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;changes.txt&lt;/code&gt; files that are
part of the distribution. Notable improvements are&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;better support for copy-and-paste from LaTeX-generated PDF documents
by including glyphtounicode mappings;&lt;/li&gt;
  &lt;li&gt;support for producing several footnote marks to one footnote with
the help of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\footref&lt;/code&gt; command;&lt;/li&gt;
  &lt;li&gt;additional support for package and class option lists that use key/value syntax;&lt;/li&gt;
  &lt;li&gt;extending the general hook management system to paragraphs and commands as discussed below.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;extending-the-general-hook-management-system-to-paragraphs-and-commands&quot;&gt;Extending the general hook management system to paragraphs and commands&lt;/h3&gt;

&lt;p&gt;In addition to the bug fixes and enhancements, the next release also
extends LaTeX’s general hook management system by supporting paragraph
hooks executed at the beginning and end of every paragraph, documented
in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ltpara-doc.pdf&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This functionality is essential for the production of automatically
tagged PDF documents and resolves one of the major obstacles in this
area. It is thus an important step in our multi-year journey towards
accessible and well-tagged PDF documents. See articles in &lt;a href=&quot;/publications/indexbytopic/pdf/&quot;&gt;PDF, Tagging,
Accessibility&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Even though this new functionality may not be of direct interest to
most users (as long as it is not yet used for processing accessible
PDF) it is nevertheless important that it gets tested to ensure that
there aren’t any conflicts with existing packages that also try to
manipulate the paragraph processing in one way or the other. So please
make use of the development format whenever you have a chance, see
below for how to do this with ease.&lt;/p&gt;

&lt;p&gt;The release will also support generic hooks on all user-level
commands; in theory that is, in practice there are some restrictions
as explained in the documentation in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ltcmdhooks-doc.pdf&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Again this is an important step towards tagged PDF as it will help
integrating the necessary code in various user-level commands without
extensive code alterations that would otherwise be required. In
addition this functionality is also of interest to packages that for
one or the other reason currently patch code of other packages or from
the kernel as the hook management helps to do this in controlled ways
avoiding typical incompatibilities between packages.&lt;/p&gt;

&lt;h3 id=&quot;kernel-support-for-the-new-latex-pdf-management&quot;&gt;Kernel support for the new LaTeX PDF management&lt;/h3&gt;

&lt;p&gt;We also added the necessary support in the LaTeX kernel and uploaded
the new LaTeX PDF management — so far as a separate package for
testing.  This code is another important step towards &lt;a href=&quot;/publications/indexbytopic/pdf/&quot;&gt;well-tagged PDF
documents&lt;/a&gt; as it provides backend-independent interfaces to central
PDF dictionaries, tools to create annotations, form Xobjects, to embed
files, and to handle PDF standards.  During a test phase this code is
provided through an external package named
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pdfmanagement-testphase&lt;/code&gt;. Please help with the testing here too.  You
can access the documentation through &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;texdoc pdfmanagement-testphase&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;outlook&quot;&gt;Outlook&lt;/h2&gt;

&lt;p&gt;This is the final prerelease, the same code (modulo any corrections
found during testing) is planned as the official June 2021 release.&lt;/p&gt;

&lt;h2 id=&quot;please-help-with-the-testing&quot;&gt;Please help with the testing&lt;/h2&gt;

&lt;p&gt;We are issuing this final pre-release now in the hope that you will help us by
making sure that all the enhancements and fixes we have provided are safe and that
they do not have any undesired side effects, so please help with the testing if
you can.&lt;/p&gt;

&lt;p&gt;This development format allows you to test the upcoming LaTeX release scheduled
for 2021-06-01 with your documents or packages. Such testing is
particularly important for package maintainers to verify that changes
to the core LaTeX haven’t introduced incompatibilities with existing
code. We try to identify any such problems beforehand but such an
undertaking is necessarily incomplete, which is why we are asking for user
testing.&lt;/p&gt;

&lt;p&gt;Besides developers, we also ask ordinary users to try out the new
release, because the more people that test the new
format, the higher the chances that any hidden problems are identified
before the final release in June hits the streets.&lt;/p&gt;

&lt;p&gt;Processing your documents with the pre-release is straightforward. All
you have to do is to replace the invocation command by appending
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-dev&lt;/code&gt; to the executable, e.g., on the command line you would run&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pdflatex-dev myfile    or    lualatex-dev myfile    or    xelatex-dev myfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;instead of using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pdflatex&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lualatex&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xelatex&lt;/code&gt;. If you use an
integrated editing environment, then it depends on the system 
how to configure it to use an alternative format; but in any case the necessary
modification should be straightforward.&lt;/p&gt;

&lt;p&gt;If you encounter any issue with this prerelease, please open a bug report
at https://github.com/latex3/latex2e/issues following the guidelines
given there (especially providing a processable test document).&lt;/p&gt;

&lt;p&gt;In case of incompatibility problems with the prerelease it is, of
course, acceptable to report them to us, even if
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\RequirePackage{latexbug}&lt;/code&gt; tells you to report them elsewhere (it
would help if you do that too).&lt;/p&gt;

&lt;p&gt;Enjoy — Frank&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ssl-vg03.met.vgwort.de/na/03770697eae2427c8a6bfe7e9b8ab332&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 05 May 2021 02:00:00 +0200</pubDate>
        <link>https://latex-project.org//news/2021/05/05/latex-dev-2021-2/</link>
        <guid isPermaLink="true">https://latex-project.org//news/2021/05/05/latex-dev-2021-2/</guid>
        
        <category>latex2e</category>
        
        <category>beta-testing</category>
        
        <category>development formats</category>
        
        
        <category>news</category>
        
      </item>
    
      <item>
        <title>Second pre-release of LaTeX 2021-05-01 is available for testing</title>
        <description>&lt;h1 id=&quot;the-second-latex-pre-release-for-2021-05-01-is-available-for-testing&quot;&gt;The second LaTeX pre-release for 2021-05-01 is available for testing&lt;/h1&gt;

&lt;p&gt;A few days ago we submitted a new LaTeX development format to CTAN
and by now this should be available to all users using MiKTeX or TeX
Live (on any operating system).&lt;/p&gt;

&lt;h2 id=&quot;main-features-of-the-second-pre-release-for-2021-05-01&quot;&gt;Main features of the second pre-release for 2021-05-01&lt;/h2&gt;

&lt;p&gt;The first pre-release was just a copy of the main release for
2020-10-01 in order to avoid that people using the development release
regularly get an old format.&lt;/p&gt;

&lt;p&gt;The second pre-release now provides a number of smaller enhancements and
resolves roughly forty issues. The more important ones are listed in
the draft publication of &lt;a href=&quot;/news/latex2e-news/ltnews33.pdf&quot;&gt;LaTeX2e News
Issue 33&lt;/a&gt;. A full list is given in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;changes.txt&lt;/code&gt; files that are
part of the distribution. Notable improvements are&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;better support for copy-and-paste from LaTeX-generated PDF documents
by including glyphtounicode mappings;&lt;/li&gt;
  &lt;li&gt;support for producing several footnote marks to one footnote with
the help of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\footref&lt;/code&gt; command;&lt;/li&gt;
  &lt;li&gt;additional support for package and class option lists that use key/value syntax;&lt;/li&gt;
  &lt;li&gt;extending the general hook management system to paragraphs as discussed below.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;extending-the-general-hook-management-system-to-paragraphs&quot;&gt;Extending the general hook management system to paragraphs&lt;/h3&gt;

&lt;p&gt;In addition to the bug fixes and enhancements, this second pre-release
also extends LaTeX’s general hook management system by supporting
paragraph hooks executed at the beginning and end of every paragraph.&lt;/p&gt;

&lt;p&gt;This functionality is essential for the production of automatically
tagged PDF documents and resolves one of the major obstacles in this
area. It is thus an important step in our multi-year journey towards
accessible and well-tagged PDF documents. See articles in &lt;a href=&quot;/publications/indexbytopic/pdf/&quot;&gt;PDF, Tagging, Accessibility&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Even though this new functionality may not be of direct interest to
most users (as long as it is not yet used for processing accessible
PDF) it is nevertheless important that it gets tested to ensure that
there aren’t any conflicts with existing packages that also try to
manipulate the paragraph processing in one way or the other. So please
make use of the development format whenever you have a chance, see
below for how to do this with ease.&lt;/p&gt;

&lt;h3 id=&quot;kernel-support-for-the-new-latex-pdf-management&quot;&gt;Kernel support for the new LaTeX PDF management&lt;/h3&gt;

&lt;p&gt;We also added the necessary support in the LaTeX kernel and uploaded the
new LaTeX PDF management — so far as a separate package for testing.
This code is another important step towards &lt;a href=&quot;/publications/indexbytopic/pdf/&quot;&gt;well-tagged PDF
documents&lt;/a&gt; as it provides backend-independent interfaces to
central PDF dictionaries, tools to create annotations, form Xobjects,
to embed files, and to handle PDF standards.  During a test phase this
code is provided through an external package named
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pdfmanagement-testphase&lt;/code&gt;. Please help with the testing here too.
You can access the documentation through &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;texdoc pdfmanagement-testphase&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;outlook&quot;&gt;Outlook&lt;/h2&gt;

&lt;p&gt;We expect to produce a third and probably final pre-release adding
some more features and enhancements in early April.&lt;/p&gt;

&lt;h2 id=&quot;please-help-with-the-testing&quot;&gt;Please help with the testing&lt;/h2&gt;

&lt;p&gt;We are issuing this second pre-release now in the hope that you will help us by
making sure that all the enhancements and fixes we have provided are safe and that
they do not have any undesired side effects, so please help with the testing if
you can.&lt;/p&gt;

&lt;p&gt;This development format allows you to test the upcoming LaTeX release scheduled
for 2021-05-01 with your documents or packages. Such testing is
particularly important for package maintainers to verify that changes
to the core LaTeX haven’t introduced incompatibilities with existing
code. We try to identify any such problems beforehand but such an
undertaking is necessarily incomplete, which is why we are asking for user
testing.&lt;/p&gt;

&lt;p&gt;Besides developers, we also ask ordinary users to try out the new
release, because the more people that test the new
format, the higher the chances that any hidden problems are identified
before the final release in May hits the streets.&lt;/p&gt;

&lt;p&gt;Processing your documents with the pre-release is straightforward. All
you have to do is to replace the invocation command by appending
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-dev&lt;/code&gt; to the executable, e.g., on the command line you would run&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pdflatex-dev myfile    or    lualatex-dev myfile    or    xelatex-dev myfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;instead of using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pdflatex&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lualatex&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xelatex&lt;/code&gt;. If you use an
integrated editing environment, then it depends on the system 
how to configure it to use an alternative format; but in any case the necessary
modification should be straightforward.&lt;/p&gt;

&lt;p&gt;Enjoy — Frank&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ssl-vg03.met.vgwort.de/na/03770697eae2427c8a6bfe7e9b8ab332&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 05 Mar 2021 01:00:00 +0100</pubDate>
        <link>https://latex-project.org//news/2021/03/05/latex-dev-2021-1/</link>
        <guid isPermaLink="true">https://latex-project.org//news/2021/03/05/latex-dev-2021-1/</guid>
        
        <category>latex2e</category>
        
        <category>beta-testing</category>
        
        <category>development formats</category>
        
        
        <category>news</category>
        
      </item>
    
      <item>
        <title>A new team member?</title>
        <description>&lt;h1 id=&quot;a-new-team-member&quot;&gt;A new team member?&lt;/h1&gt;

&lt;p&gt;In these rather dark times, some light-hearted news.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/gato-2021.jpg&quot; alt=&quot;Gato&quot; width=&quot;60%&quot; height=&quot;auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Courtesy of Paulo Cereda (the designer of our hummingbird) a picture
of his pet camouflaging himself as a project member:&lt;/p&gt;

&lt;p&gt;Looking forward to his contributions. — Enjoy Frank&lt;/p&gt;

</description>
        <pubDate>Sun, 07 Feb 2021 01:00:00 +0100</pubDate>
        <link>https://latex-project.org//news/2021/02/07/a-new-team-member/</link>
        <guid isPermaLink="true">https://latex-project.org//news/2021/02/07/a-new-team-member/</guid>
        
        <category>latex</category>
        
        <category>latex team</category>
        
        
        <category>news</category>
        
      </item>
    
      <item>
        <title>Tagged PDF feasibility study published</title>
        <description>&lt;h1 id=&quot;tagged-pdf-feasibility-study-published&quot;&gt;Tagged PDF feasibility study published&lt;/h1&gt;

&lt;p&gt;At the TUG 2020 online conference we announced the start of a multi-year project to automatically generate tagged PDF with LaTeX, which is an important aspect of producing “accessible” documents. Back then we promised that further information about the project is forthcoming.&lt;/p&gt;

&lt;p&gt;We have now added the feasibility study (which was the starting point for the project) to this website:&lt;/p&gt;

&lt;h3 id=&quot;latex-tagged-pdf-feasibility-evaluation-study&quot;&gt;&lt;a href=&quot;/publications/2020-tagged-pdf-feasibility.pdf&quot; target=&quot;_blank&quot; onclick=&quot;vgwPixelCall('c1e17b6fed7b4e0fac9032b4aad469c9');&quot;&gt;LaTeX Tagged PDF Feasibility Evaluation Study&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/about/team/#frank-mittelbach&quot;&gt;Frank Mittelbach&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/about/team/#ulrike-fischer&quot;&gt;Ulrike Fischer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/about/team/#chris-rowley&quot;&gt;Chris Rowley&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Written: December 2019 with minor updates September 2020&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;This forty-page document contains information about a 
multi-year project, started by the LaTeX Project Team in 2020, 
that will extend  LaTeX to produce tagged, and hence accessible, 
PDF with minimal manual intervention.
  It explains in detail both the
project goals and the tasks that need to be undertaken, concluding
with a detailed project plan.  It is our blueprint for for how we
think the project should be undertaken.&lt;/p&gt;

  &lt;p&gt;The Introduction contains an overview of the beneﬁts of the
project and explains why LaTeX documents make a good starting point
for the production of tagged PDF.  More information about this
blueprint and the project can be found in the article “LaTeX Tagged
PDF — A blueprint for a large project” TUGboat, Volume 41-3 (2020),
which will appear shortly.&lt;/p&gt;

  &lt;p&gt;The original version of this study dates from late 2019 and was
addressed primarily to an audience within Adobe which consisted of
engineers and managers with a wide knowledge of digital typography and
electronic publishing but not necessarily much background within the
specialized world of TeX, LaTeX and friends.  This version of the
study was updated in September 2020 with some minor redactions,
corrections and clarifications.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;In addition the TUGboat article referred to above is also available for reading:&lt;/p&gt;

&lt;h3 id=&quot;latex-tagged-pdf--a-blueprint-for-a-large-project&quot;&gt;&lt;a href=&quot;/publications/2020-FMi-TUB-tb129mitt-tagpdf.pdf&quot; target=&quot;_blank&quot; onclick=&quot;vgwPixelCall('be7595c59bf34ca8b4366dfa05816e17');&quot;&gt;LaTeX Tagged PDF — A blueprint for a large project&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/about/team/#frank-mittelbach&quot;&gt;Frank Mittelbach&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/about/team/#chris-rowley&quot;&gt;Chris Rowley&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;TUGboat 41:3, 2020&lt;/li&gt;
  &lt;li&gt;Abstract
    &lt;blockquote&gt;
      &lt;p&gt;In Frank’s talk at the TUG 2020 online conference we announced the
start of a multi-year project to enhance LaTeX to fully and
naturally support the creation of structured document formats, in
particular the “tagged PDF” format as required by accessibility
standards such as PDF/UA.&lt;/p&gt;

      &lt;p&gt;In this short article we outline the background to this project and
some of its history so far. We then describe the major features of
the project and the tasks involved, of which more details can be
found in the &lt;a href=&quot;/publications/2020-tagged-pdf-feasibility.pdf&quot; target=&quot;_blank&quot; onclick=&quot;vgwPixelCall('c1e17b6fed7b4e0fac9032b4aad469c9');&quot;&gt;Feasibility
Study&lt;/a&gt; that was prepared as the ﬁrst part of our co-operation
with Adobe.&lt;/p&gt;

      &lt;p&gt;This leads on to a description of how we plan to use the study as
the basis for our work on the project and some details of our
planned working methodologies, illustrated by what we have achieved
so far and leading to a discussion of some of the obstacles we
foresee.&lt;/p&gt;

      &lt;p&gt;Finally there is also a summary of recent, current and upcoming
activities on and around the project.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;You will find both documents, as well as other documents about the “Tagged PDF Project” and related topics, on the &lt;a href=&quot;/publications/indexbytopic/pdf/&quot;&gt;PDF, Tagging and Accessibility&lt;/a&gt; page in the publications area of the site.&lt;/p&gt;
</description>
        <pubDate>Mon, 30 Nov 2020 01:00:00 +0100</pubDate>
        <link>https://latex-project.org//news/2020/11/30/tagged-pdf-FS-study/</link>
        <guid isPermaLink="true">https://latex-project.org//news/2020/11/30/tagged-pdf-FS-study/</guid>
        
        <category>latex</category>
        
        <category>accessibility</category>
        
        <category>tagged pdf</category>
        
        
        <category>news</category>
        
      </item>
    
      <item>
        <title>Tutorial on the L3 programming layer (expl3)</title>
        <description>&lt;h1 id=&quot;tutorial-on-the-l3-programming-layer-expl3&quot;&gt;Tutorial on the L3 programming layer (expl3)&lt;/h1&gt;

&lt;p&gt;In Spring 2020 the LaTeX3 programming language &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;expl3&lt;/code&gt; was integrated
into the LaTeX format to make it directly accessible to package
developers and for future LaTeX kernel programming. Since that date
LaTeX announces itself with something like&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;LaTeX2e &amp;lt;2020-10-01&amp;gt; patch level 2
L3 programming layer &amp;lt;2020-10-27&amp;gt; xparse &amp;lt;2020-03-03&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Up to now the documentation for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;expl3&lt;/code&gt; that we provide consists of a
short introduction (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;expl3.pdf&lt;/code&gt;), its reference manual
(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;interface3.pdf&lt;/code&gt;) and its source code (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;source3.pdf&lt;/code&gt;) all of which you
can easily access using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;texdoc&lt;/code&gt; program, e.g.,&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;texdoc interface3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What was missing, however, was a tutorial to help progammers to get
familiar with the features and approaches when they want to use the L3
programming layer in their own packages. Such a tutorial has now been
written by Ziyue “Alan” Xiang, currently a PhD student at Purdue
University and we strongly recommend to check it out if you are
interested in L3 programming or in understanding code written in it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.alanshawn.com/latex3-tutorial/&quot;&gt;Tutorial on L3 programming layer (expl3)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks Alan for your work; it is much appreciated!&lt;/p&gt;

&lt;p&gt;Enjoy — Frank&lt;/p&gt;

</description>
        <pubDate>Mon, 09 Nov 2020 01:00:00 +0100</pubDate>
        <link>https://latex-project.org//news/2020/11/09/l3-tutorial/</link>
        <guid isPermaLink="true">https://latex-project.org//news/2020/11/09/l3-tutorial/</guid>
        
        <category>latex3</category>
        
        <category>development</category>
        
        <category>tutorial</category>
        
        
        <category>news</category>
        
      </item>
    
      <item>
        <title>Fall 2020 LaTeX release available</title>
        <description>&lt;h1 id=&quot;the-fall-2020-latex-release-is-available&quot;&gt;The fall 2020 LaTeX release is available&lt;/h1&gt;

&lt;p&gt;This release introduces a number of important
enhancements.&lt;/p&gt;

&lt;h3 id=&quot;a-general-hook-management-system-for-latex&quot;&gt;A general hook management system for LaTeX&lt;/h3&gt;

&lt;p&gt;Most LaTeX users and package writers will know the handful of hooks
that LaTeX has been offering until now, the most important one perhaps
being &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\AtBeginDocument&lt;/code&gt;. These are important hooks, but they are far
too few so that in many cases package developers had to directly patch
the internals of LaTeX.  This resulted in many problems.&lt;/p&gt;

&lt;p&gt;With the new hook management system, LaTeX will get many more hooks
that package writers (and authors) can use to add code in a
controlled and reliable way.  New hooks have been added in a number of
places by using the new system and more will follow over
time. Available now are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Hooks to add code before and after environments (formerly offered
through the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;etoolbox&lt;/code&gt; package);&lt;/li&gt;
  &lt;li&gt;Hooks used when loading files, packages, or classes (similar to
what the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;filehook&lt;/code&gt; package now provides);&lt;/li&gt;
  &lt;li&gt;Hooks in the page-building process (e.g., functionality previously
available through packages such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atbegshi&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atveryend&lt;/code&gt; and a
few others).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The important point here is not so much that the functionality of these
packages has been integrated into the LaTeX kernel, but that the
hook management system provides a single structured way for different packages 
to reliably add and order 
code.  This will resolve
many of the inter-package interoperability issues which formerly
could be resolved (if at all) only by loading the packages in a specific order, 
or by the use of complex and fragile code inside the packages to account
for various scenarios in user documents.&lt;/p&gt;

&lt;p&gt;The hook management system is currently described in these three documents:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;texdoc lthooks&lt;/code&gt;  — The description of the interfaces and the core
hooks already added to the kernel.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;texdoc ltshipout&lt;/code&gt; — The documentation of the hooks available
during the page production process.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;texdoc ltfilehook&lt;/code&gt; — hooks that can be used before or after a file gets loaded.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;providing-xparse-as-part-of-the-format&quot;&gt;Providing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xparse&lt;/code&gt; as part of the format&lt;/h3&gt;

&lt;p&gt;In the previous release we added the LaTeX3 programming layer to the
LaTeX format to improve the loading speed when packages using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;expl3&lt;/code&gt;
are used. In this release we are now extending this support by
integrating &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xparse&lt;/code&gt; so that the extended interface for defining
document-level commands becomes available out of the box.&lt;/p&gt;

&lt;p&gt;This enables users and most importantly package developers to
easily define LaTeX commands with multiple optional arguments or
other syntax features with ease.
For details, check out the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xparse&lt;/code&gt; documentation, e.g., via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;texdoc
xparse&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;improving-the-font-series-handling&quot;&gt;Improving the font series handling&lt;/h3&gt;

&lt;p&gt;In the previous release we extended NFSS (the new font selection scheme)
to better support modern fonts that offer different font faces, e.g.,
condensed, semi-bold, etc., and make them work seamlessly with each
other. Experiences with the extended interface showed that for some
use cases adequate support was still missing or that in special setups
the algorithms sometimes selected a wrong font series value. These
cases have now been resolved and additional support commands have been
added. For example, with&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\IfFontSeriesContextTF{〈context〉} {〈true code〉}{〈false code〉}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;you can now define commands that behave differently depending on the
current font series context. The 〈context〉 to check has to be specified
as either &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bf&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;md&lt;/code&gt;. The command then chooses the 〈true code〉
or the 〈false code〉 based on where it is used (e.g., inside
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\textbf&lt;/code&gt; (or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\bfseries&lt;/code&gt;) or not).&lt;/p&gt;

&lt;h3 id=&quot;a-large-number-of-other-enhancements-and-corrections&quot;&gt;A large number of other enhancements and corrections&lt;/h3&gt;

&lt;p&gt;There are nearly fifty other enhancements and corrections that we
documented in the ltnews article for this release (and a few very
minor ones that only made it into the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;changes.txt&lt;/code&gt;file) The most
important ones from a user perspective are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Support for length expression in coordinates of picture commands as an alternative to
decimal numbers denoting a multiple of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\unitlength&lt;/code&gt;, e.g., &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\put(0,.2\textheight){...}&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;New commands to make copies of robust commands (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\let&lt;/code&gt; wouldn’t
work for them)&lt;/li&gt;
  &lt;li&gt;A new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\ShowCommand&lt;/code&gt; command to display the full definition of a
robust command (works also on other commands)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But read the whole ltnews article because there may be other gems that
are useful for you.&lt;/p&gt;

&lt;h4 id=&quot;where-to-learn-more-&quot;&gt;Where to learn more …&lt;/h4&gt;

&lt;p&gt;The new features and most the important bug fixes made in this release
are documented in &lt;a href=&quot;/news/latex2e-news/ltnews32.pdf&quot; target=&quot;_blank&quot; onclick=&quot;vgwPixelCall('4c0ec6a7a0884b70986328bd5dc816ee');&quot;&gt;“LaTeX2e
News Issue 32”&lt;/a&gt;. This document can be found on the &lt;a href=&quot;/news/latex2e-news/&quot;&gt;LaTeX2e news
page&lt;/a&gt; where you will also find
release information for earlier LaTeX releases.&lt;/p&gt;

&lt;p&gt;Happy LaTeXing
— Frank&lt;/p&gt;

</description>
        <pubDate>Thu, 01 Oct 2020 02:00:00 +0200</pubDate>
        <link>https://latex-project.org//news/2020/10/01/issue32-of-latex2e-released/</link>
        <guid isPermaLink="true">https://latex-project.org//news/2020/10/01/issue32-of-latex2e-released/</guid>
        
        <category>latex2e</category>
        
        <category>latex-news</category>
        
        
        <category>news</category>
        
      </item>
    
  </channel>
</rss>
